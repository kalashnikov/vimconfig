# change escape to c-a
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# F11 and F12 to switch between windows
#
# Hint of Mac Iterm2 Hotkey setting (Using Escape seq)
# Keystroke of F11 => ^[[23~
# Keystroke of F12 => ^[[24~
# Ref: http://unix.stackexchange.com/questions/53581/sending-function-keys-f1-f12-over-ssh
bind-key -n F11 previous-window
bind-key -n F12 next-window
bind o previous-window
bind p next-window

# C-c also create new window, like in screen
bind-key C-c new-window

# Use Vi mode
setw -g mode-keys vi

# use xterm function key sequence
setw -g xterm-keys on

# # More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind h split-window -h
unbind '"'
bind - split-window -v
bind v split-window -v

# Notifying if other windows has activities
set-option -g visual-activity off
setw -g monitor-activity off

# Terminal emulator window title, set it to off so that we can use zsh to
# operate it
setw -g automatic-rename off

#altscreen 
setw -g alternate-screen on

# start index from 1
set -g base-index 1

# terminal overrides
set -ga terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:colors=256,screen-256color:Tc"
set -g default-terminal "screen-256color"

set -g escape-time 10

# Set status bar
set -g status-justify centre
set -g status-bg default
set -g status-left "#[fg=cyan]:#[fg=blue]: #[fg=red][ #[fg=colour227,bold]#H #[default]#[fg=red]]#[default]"
set -g status-left-length 20
set -g status-right-length 25
set -g status-right "#[fg=red][ #[fg=colour154]%a #[fg=colour183]%m-%d #[fg=red]] #[fg=blue]:#[fg=cyan]:#[default]" 
setw -g window-status-format '#[fg=blue,bold]#I #T#[default] '
setw -g window-status-current-format '#[fg=blue,bold,reverse]#I #T#[default] '
setw -g window-status-bell-attr bold,reverse
setw -g window-status-bell-fg red
setw -g window-status-bell-bg default

